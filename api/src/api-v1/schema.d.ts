/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/login": {
    post: operations["login"];
  };
  "/products": {
    get: operations["getProducts"];
    /** @description create a product */
    post: operations["postProduct"];
  };
  "/products/{id}": {
    delete: operations["deleteProduct"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    User: {
      /** Format: uuid */
      id: string;
      username: string;
    };
    Product: {
      /** Format: uuid */
      id: string;
      category: components["schemas"]["Category"];
      /** @description The name of the product. */
      name: string;
      /** Format: double */
      price: number;
      /** @description The stockage of the product. */
      stocked: boolean;
    };
    Category: {
      /** Format: uuid */
      id: string;
      name: string;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {

  login: {
    requestBody: {
      content: {
        "application/json": {
          username: string;
          /** Format: password */
          password: string;
        };
      };
    };
    responses: {
      /** @description The login */
      201: {
        content: {
          "*/*": {
            accessToken?: string;
          };
        };
      };
    };
  };
  getProducts: {
    parameters: {
      query?: {
        /** @description The product name */
        name?: string;
      };
    };
    responses: {
      /** @description reutnr products */
      default: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  /** @description create a product */
  postProduct: {
    requestBody: {
      content: {
        "application/json": {
          /** Format: uuid */
          category: string;
          name: string;
          /**
           * Format: double
           * @default 0
           */
          price?: number;
          /** @default true */
          stocked?: boolean;
        };
      };
    };
    responses: {
      /** @description OK */
      201: {
        content: {
          "application/json": components["schemas"]["Product"];
        };
      };
    };
  };
  deleteProduct: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
        };
      };
    };
  };
}
